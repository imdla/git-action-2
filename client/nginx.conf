worker_processes 1;

events {
    worker_connections 1024;
}

http { 
    include       mime.types;
    default_type  application/json;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for" '
                'to "$upstream_addr"';
                
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log debug;

    gzip_static on;
    gzip_vary on;

    # HTTPS 서버 설정
    server {
        listen 443 ssl http2;
        server_name 도메인;

        # SSL 설정
        ssl_certificate /etc/letsencrypt/live/도메인/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/도메인/privkey.pem;

        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri /index.html;
        }

        location /api/ {
            proxy_pass http://backend-container:8080;
            proxy_set_header Host $host;
        }
    }

    server {
        listen 80;
        server_name localhost;

        root   /usr/share/nginx/html;
        index  index.html;

        location / {
            try_files $uri /index.html;
        }
        
        location /api {
            # API 서버로 요청을 프록시
            proxy_pass http://api-container:8080;

            # 요청 헤더 설정
            proxy_http_version 1.1;                    # HTTP/1.1 사용 (Keep-Alive가 기본값, 지속적 연결 지원, 파이프라이닝 가능)
            proxy_set_header Connection "keep-alive";  # Keep-Alive 활성화 (여러 요청에 대해 단일 TCP 연결 재사용)
            proxy_set_header Host $host;                # 원본 호스트 정보 ex) localhost:80ㅁ
            proxy_set_header X-Real-IP $remote_addr;    # 실제 클라이언트 IP ex) 127.0.0.1
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 프록시 서버를 거친 클라이언트의 IP 목록
        }
    }
}